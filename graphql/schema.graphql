type User {
  username: String!
  email: String
  imageUrl: String
  createdAt: String!
  latestMessage: Message
}

type Reaction {
  uuid: String!
  content: String!
  user: User!
  message: Message!
  createdAt: String
  updatedAt: String
}

type Message {
  uuid: String!
  content: String!
  from: String!
  to: String!
  createdAt: String!
  reactions: [Reaction]
}

type AuthResponseType {
  user: User!
  token: String!
}

type Query {
  getUsers: [User]!
  getMessages(from: String!): [Message]!
}

type Mutation {
  register(
    email: String!
    username: String!
    password: String!
    confirmPassword: String!
  ): User!
  login(username: String!, password: String!): AuthResponseType
  sendMessage(to: String!, content: String!): Message!
  reactToMessage(uuid: String!, content: String!): Reaction!
}

type Subscription {
  newMessage: Message!
  newReaction: Reaction!
}
